program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "3304.6.1"}, {"coremlc-version", "3304.7.1"}, {"coremltools-component-torch", "2.4.0"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "8.0b2"}})]
{
    func main<ios15>(tensor<fp32, [1, 3, 640, 640]> image) {
            tensor<fp32, []> image__scaled___y_0 = const()[name = tensor<string, []>("image__scaled___y_0"), val = tensor<fp32, []>(0x1.010102p-8)];
            tensor<fp32, [1, 3, 640, 640]> image__scaled__ = mul(x = image, y = image__scaled___y_0)[name = tensor<string, []>("image__scaled__")];
            tensor<int32, []> var_20 = const()[name = tensor<string, []>("op_20"), val = tensor<int32, []>(1)];
            tensor<int32, []> var_21 = const()[name = tensor<string, []>("op_21"), val = tensor<int32, []>(2)];
            tensor<int32, [2]> var_59 = const()[name = tensor<string, []>("op_59"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_61 = const()[name = tensor<string, []>("op_61"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_1_pad_type_0 = const()[name = tensor<string, []>("input_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_1_pad_0 = const()[name = tensor<string, []>("input_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<string, []> image_to_fp16_dtype_0 = const()[name = tensor<string, []>("image_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [32, 3, 3, 3]> model_model_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_0_conv_weight_to_fp16"), val = tensor<fp16, [32, 3, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [32]> model_model_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_0_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1856)))];
            tensor<fp16, [1, 3, 640, 640]> image_to_fp16 = cast(dtype = image_to_fp16_dtype_0, x = image__scaled__)[name = tensor<string, []>("cast_9")];
            tensor<fp16, [1, 32, 320, 320]> input_1_cast_fp16 = conv(bias = model_model_0_conv_bias_to_fp16, dilations = var_61, groups = var_20, pad = input_1_pad_0, pad_type = input_1_pad_type_0, strides = var_59, weight = model_model_0_conv_weight_to_fp16, x = image_to_fp16)[name = tensor<string, []>("input_1_cast_fp16")];
            tensor<fp16, [1, 32, 320, 320]> input_3_cast_fp16 = silu(x = input_1_cast_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<int32, [2]> var_68 = const()[name = tensor<string, []>("op_68"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_70 = const()[name = tensor<string, []>("op_70"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_5_pad_type_0 = const()[name = tensor<string, []>("input_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_5_pad_0 = const()[name = tensor<string, []>("input_5_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 32, 3, 3]> model_model_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1984)))];
            tensor<fp16, [64]> model_model_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38912)))];
            tensor<fp16, [1, 64, 160, 160]> input_5_cast_fp16 = conv(bias = model_model_1_conv_bias_to_fp16, dilations = var_70, groups = var_20, pad = input_5_pad_0, pad_type = input_5_pad_type_0, strides = var_68, weight = model_model_1_conv_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<fp16, [1, 64, 160, 160]> input_7_cast_fp16 = silu(x = input_5_cast_fp16)[name = tensor<string, []>("input_7_cast_fp16")];
            tensor<int32, [2]> var_81 = const()[name = tensor<string, []>("op_81"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_83 = const()[name = tensor<string, []>("op_83"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_9_pad_type_0 = const()[name = tensor<string, []>("input_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_9_pad_0 = const()[name = tensor<string, []>("input_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_model_2_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_2_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39104)))];
            tensor<fp16, [64]> model_model_2_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_2_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47360)))];
            tensor<fp16, [1, 64, 160, 160]> input_9_cast_fp16 = conv(bias = model_model_2_cv1_conv_bias_to_fp16, dilations = var_83, groups = var_20, pad = input_9_pad_0, pad_type = input_9_pad_type_0, strides = var_81, weight = model_model_2_cv1_conv_weight_to_fp16, x = input_7_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<fp16, [1, 64, 160, 160]> var_86_cast_fp16 = silu(x = input_9_cast_fp16)[name = tensor<string, []>("op_86_cast_fp16")];
            tensor<int32, [2]> var_87 = const()[name = tensor<string, []>("op_87"), val = tensor<int32, [2]>([32, 32])];
            tensor<int32, []> var_88_axis_0 = const()[name = tensor<string, []>("op_88_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 32, 160, 160]> var_88_cast_fp16_0, tensor<fp16, [1, 32, 160, 160]> var_88_cast_fp16_1 = split(axis = var_88_axis_0, split_sizes = var_87, x = var_86_cast_fp16)[name = tensor<string, []>("op_88_cast_fp16")];
            tensor<int32, [2]> var_96 = const()[name = tensor<string, []>("op_96"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_98 = const()[name = tensor<string, []>("op_98"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_13_pad_type_0 = const()[name = tensor<string, []>("input_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_13_pad_0 = const()[name = tensor<string, []>("input_13_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_model_2_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_2_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47552)))];
            tensor<fp16, [32]> model_model_2_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_2_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66048)))];
            tensor<fp16, [1, 32, 160, 160]> input_13_cast_fp16 = conv(bias = model_model_2_m_0_cv1_conv_bias_to_fp16, dilations = var_98, groups = var_20, pad = input_13_pad_0, pad_type = input_13_pad_type_0, strides = var_96, weight = model_model_2_m_0_cv1_conv_weight_to_fp16, x = var_88_cast_fp16_1)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<fp16, [1, 32, 160, 160]> input_15_cast_fp16 = silu(x = input_13_cast_fp16)[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<int32, [2]> var_105 = const()[name = tensor<string, []>("op_105"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_107 = const()[name = tensor<string, []>("op_107"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_17_pad_type_0 = const()[name = tensor<string, []>("input_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_17_pad_0 = const()[name = tensor<string, []>("input_17_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_model_2_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_2_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66176)))];
            tensor<fp16, [32]> model_model_2_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_2_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(84672)))];
            tensor<fp16, [1, 32, 160, 160]> input_17_cast_fp16 = conv(bias = model_model_2_m_0_cv2_conv_bias_to_fp16, dilations = var_107, groups = var_20, pad = input_17_pad_0, pad_type = input_17_pad_type_0, strides = var_105, weight = model_model_2_m_0_cv2_conv_weight_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<fp16, [1, 32, 160, 160]> var_110_cast_fp16 = silu(x = input_17_cast_fp16)[name = tensor<string, []>("op_110_cast_fp16")];
            tensor<fp16, [1, 32, 160, 160]> var_111_cast_fp16 = add(x = var_88_cast_fp16_1, y = var_110_cast_fp16)[name = tensor<string, []>("op_111_cast_fp16")];
            tensor<bool, []> input_19_interleave_0 = const()[name = tensor<string, []>("input_19_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 96, 160, 160]> input_19_cast_fp16 = concat(axis = var_20, interleave = input_19_interleave_0, values = (var_88_cast_fp16_0, var_88_cast_fp16_1, var_111_cast_fp16))[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<int32, [2]> var_117 = const()[name = tensor<string, []>("op_117"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_119 = const()[name = tensor<string, []>("op_119"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_21_pad_type_0 = const()[name = tensor<string, []>("input_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_21_pad_0 = const()[name = tensor<string, []>("input_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 96, 1, 1]> model_model_2_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_2_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(84800)))];
            tensor<fp16, [64]> model_model_2_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_2_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97152)))];
            tensor<fp16, [1, 64, 160, 160]> input_21_cast_fp16 = conv(bias = model_model_2_cv2_conv_bias_to_fp16, dilations = var_119, groups = var_20, pad = input_21_pad_0, pad_type = input_21_pad_type_0, strides = var_117, weight = model_model_2_cv2_conv_weight_to_fp16, x = input_19_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<fp16, [1, 64, 160, 160]> input_23_cast_fp16 = silu(x = input_21_cast_fp16)[name = tensor<string, []>("input_23_cast_fp16")];
            tensor<int32, [2]> var_126 = const()[name = tensor<string, []>("op_126"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_128 = const()[name = tensor<string, []>("op_128"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_25_pad_type_0 = const()[name = tensor<string, []>("input_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_25_pad_0 = const()[name = tensor<string, []>("input_25_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 64, 3, 3]> model_model_3_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_3_conv_weight_to_fp16"), val = tensor<fp16, [128, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97344)))];
            tensor<fp16, [128]> model_model_3_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_3_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(244864)))];
            tensor<fp16, [1, 128, 80, 80]> input_25_cast_fp16 = conv(bias = model_model_3_conv_bias_to_fp16, dilations = var_128, groups = var_20, pad = input_25_pad_0, pad_type = input_25_pad_type_0, strides = var_126, weight = model_model_3_conv_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> input_27_cast_fp16 = silu(x = input_25_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<int32, [2]> var_141 = const()[name = tensor<string, []>("op_141"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_143 = const()[name = tensor<string, []>("op_143"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 128, 1, 1]> model_model_4_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(245184)))];
            tensor<fp16, [128]> model_model_4_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(278016)))];
            tensor<fp16, [1, 128, 80, 80]> input_29_cast_fp16 = conv(bias = model_model_4_cv1_conv_bias_to_fp16, dilations = var_143, groups = var_20, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = var_141, weight = model_model_4_cv1_conv_weight_to_fp16, x = input_27_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> var_146_cast_fp16 = silu(x = input_29_cast_fp16)[name = tensor<string, []>("op_146_cast_fp16")];
            tensor<int32, [2]> var_147 = const()[name = tensor<string, []>("op_147"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_148_axis_0 = const()[name = tensor<string, []>("op_148_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 80, 80]> var_148_cast_fp16_0, tensor<fp16, [1, 64, 80, 80]> var_148_cast_fp16_1 = split(axis = var_148_axis_0, split_sizes = var_147, x = var_146_cast_fp16)[name = tensor<string, []>("op_148_cast_fp16")];
            tensor<int32, [2]> var_156 = const()[name = tensor<string, []>("op_156"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_158 = const()[name = tensor<string, []>("op_158"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_33_pad_type_0 = const()[name = tensor<string, []>("input_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_33_pad_0 = const()[name = tensor<string, []>("input_33_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_4_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(278336)))];
            tensor<fp16, [64]> model_model_4_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(352128)))];
            tensor<fp16, [1, 64, 80, 80]> input_33_cast_fp16 = conv(bias = model_model_4_m_0_cv1_conv_bias_to_fp16, dilations = var_158, groups = var_20, pad = input_33_pad_0, pad_type = input_33_pad_type_0, strides = var_156, weight = model_model_4_m_0_cv1_conv_weight_to_fp16, x = var_148_cast_fp16_1)[name = tensor<string, []>("input_33_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_35_cast_fp16 = silu(x = input_33_cast_fp16)[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<int32, [2]> var_165 = const()[name = tensor<string, []>("op_165"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_167 = const()[name = tensor<string, []>("op_167"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_37_pad_type_0 = const()[name = tensor<string, []>("input_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_37_pad_0 = const()[name = tensor<string, []>("input_37_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_4_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(352320)))];
            tensor<fp16, [64]> model_model_4_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(426112)))];
            tensor<fp16, [1, 64, 80, 80]> input_37_cast_fp16 = conv(bias = model_model_4_m_0_cv2_conv_bias_to_fp16, dilations = var_167, groups = var_20, pad = input_37_pad_0, pad_type = input_37_pad_type_0, strides = var_165, weight = model_model_4_m_0_cv2_conv_weight_to_fp16, x = input_35_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> var_170_cast_fp16 = silu(x = input_37_cast_fp16)[name = tensor<string, []>("op_170_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_39_cast_fp16 = add(x = var_148_cast_fp16_1, y = var_170_cast_fp16)[name = tensor<string, []>("input_39_cast_fp16")];
            tensor<int32, [2]> var_177 = const()[name = tensor<string, []>("op_177"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_179 = const()[name = tensor<string, []>("op_179"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_41_pad_type_0 = const()[name = tensor<string, []>("input_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_41_pad_0 = const()[name = tensor<string, []>("input_41_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_4_m_1_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_1_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(426304)))];
            tensor<fp16, [64]> model_model_4_m_1_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_1_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(500096)))];
            tensor<fp16, [1, 64, 80, 80]> input_41_cast_fp16 = conv(bias = model_model_4_m_1_cv1_conv_bias_to_fp16, dilations = var_179, groups = var_20, pad = input_41_pad_0, pad_type = input_41_pad_type_0, strides = var_177, weight = model_model_4_m_1_cv1_conv_weight_to_fp16, x = input_39_cast_fp16)[name = tensor<string, []>("input_41_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_43_cast_fp16 = silu(x = input_41_cast_fp16)[name = tensor<string, []>("input_43_cast_fp16")];
            tensor<int32, [2]> var_186 = const()[name = tensor<string, []>("op_186"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_188 = const()[name = tensor<string, []>("op_188"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_45_pad_type_0 = const()[name = tensor<string, []>("input_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_45_pad_0 = const()[name = tensor<string, []>("input_45_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_4_m_1_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_1_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(500288)))];
            tensor<fp16, [64]> model_model_4_m_1_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_1_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(574080)))];
            tensor<fp16, [1, 64, 80, 80]> input_45_cast_fp16 = conv(bias = model_model_4_m_1_cv2_conv_bias_to_fp16, dilations = var_188, groups = var_20, pad = input_45_pad_0, pad_type = input_45_pad_type_0, strides = var_186, weight = model_model_4_m_1_cv2_conv_weight_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("input_45_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> var_191_cast_fp16 = silu(x = input_45_cast_fp16)[name = tensor<string, []>("op_191_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> var_192_cast_fp16 = add(x = input_39_cast_fp16, y = var_191_cast_fp16)[name = tensor<string, []>("op_192_cast_fp16")];
            tensor<bool, []> input_47_interleave_0 = const()[name = tensor<string, []>("input_47_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 256, 80, 80]> input_47_cast_fp16 = concat(axis = var_20, interleave = input_47_interleave_0, values = (var_148_cast_fp16_0, var_148_cast_fp16_1, input_39_cast_fp16, var_192_cast_fp16))[name = tensor<string, []>("input_47_cast_fp16")];
            tensor<int32, [2]> var_198 = const()[name = tensor<string, []>("op_198"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_200 = const()[name = tensor<string, []>("op_200"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_49_pad_type_0 = const()[name = tensor<string, []>("input_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_49_pad_0 = const()[name = tensor<string, []>("input_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 256, 1, 1]> model_model_4_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(574272)))];
            tensor<fp16, [128]> model_model_4_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(639872)))];
            tensor<fp16, [1, 128, 80, 80]> input_49_cast_fp16 = conv(bias = model_model_4_cv2_conv_bias_to_fp16, dilations = var_200, groups = var_20, pad = input_49_pad_0, pad_type = input_49_pad_type_0, strides = var_198, weight = model_model_4_cv2_conv_weight_to_fp16, x = input_47_cast_fp16)[name = tensor<string, []>("input_49_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> input_51_cast_fp16 = silu(x = input_49_cast_fp16)[name = tensor<string, []>("input_51_cast_fp16")];
            tensor<int32, [2]> var_207 = const()[name = tensor<string, []>("op_207"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_209 = const()[name = tensor<string, []>("op_209"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_53_pad_type_0 = const()[name = tensor<string, []>("input_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_53_pad_0 = const()[name = tensor<string, []>("input_53_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 128, 3, 3]> model_model_5_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_5_conv_weight_to_fp16"), val = tensor<fp16, [256, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(640192)))];
            tensor<fp16, [256]> model_model_5_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_5_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1230080)))];
            tensor<fp16, [1, 256, 40, 40]> input_53_cast_fp16 = conv(bias = model_model_5_conv_bias_to_fp16, dilations = var_209, groups = var_20, pad = input_53_pad_0, pad_type = input_53_pad_type_0, strides = var_207, weight = model_model_5_conv_weight_to_fp16, x = input_51_cast_fp16)[name = tensor<string, []>("input_53_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> input_55_cast_fp16 = silu(x = input_53_cast_fp16)[name = tensor<string, []>("input_55_cast_fp16")];
            tensor<int32, [2]> var_222 = const()[name = tensor<string, []>("op_222"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_224 = const()[name = tensor<string, []>("op_224"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_57_pad_type_0 = const()[name = tensor<string, []>("input_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_57_pad_0 = const()[name = tensor<string, []>("input_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 256, 1, 1]> model_model_6_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1230656)))];
            tensor<fp16, [256]> model_model_6_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1361792)))];
            tensor<fp16, [1, 256, 40, 40]> input_57_cast_fp16 = conv(bias = model_model_6_cv1_conv_bias_to_fp16, dilations = var_224, groups = var_20, pad = input_57_pad_0, pad_type = input_57_pad_type_0, strides = var_222, weight = model_model_6_cv1_conv_weight_to_fp16, x = input_55_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> var_227_cast_fp16 = silu(x = input_57_cast_fp16)[name = tensor<string, []>("op_227_cast_fp16")];
            tensor<int32, [2]> var_228 = const()[name = tensor<string, []>("op_228"), val = tensor<int32, [2]>([128, 128])];
            tensor<int32, []> var_229_axis_0 = const()[name = tensor<string, []>("op_229_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 40, 40]> var_229_cast_fp16_0, tensor<fp16, [1, 128, 40, 40]> var_229_cast_fp16_1 = split(axis = var_229_axis_0, split_sizes = var_228, x = var_227_cast_fp16)[name = tensor<string, []>("op_229_cast_fp16")];
            tensor<int32, [2]> var_237 = const()[name = tensor<string, []>("op_237"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_239 = const()[name = tensor<string, []>("op_239"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_61_pad_type_0 = const()[name = tensor<string, []>("input_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_61_pad_0 = const()[name = tensor<string, []>("input_61_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_6_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1362368)))];
            tensor<fp16, [128]> model_model_6_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1657344)))];
            tensor<fp16, [1, 128, 40, 40]> input_61_cast_fp16 = conv(bias = model_model_6_m_0_cv1_conv_bias_to_fp16, dilations = var_239, groups = var_20, pad = input_61_pad_0, pad_type = input_61_pad_type_0, strides = var_237, weight = model_model_6_m_0_cv1_conv_weight_to_fp16, x = var_229_cast_fp16_1)[name = tensor<string, []>("input_61_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> input_63_cast_fp16 = silu(x = input_61_cast_fp16)[name = tensor<string, []>("input_63_cast_fp16")];
            tensor<int32, [2]> var_246 = const()[name = tensor<string, []>("op_246"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_248 = const()[name = tensor<string, []>("op_248"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_65_pad_type_0 = const()[name = tensor<string, []>("input_65_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_65_pad_0 = const()[name = tensor<string, []>("input_65_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_6_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1657664)))];
            tensor<fp16, [128]> model_model_6_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1952640)))];
            tensor<fp16, [1, 128, 40, 40]> input_65_cast_fp16 = conv(bias = model_model_6_m_0_cv2_conv_bias_to_fp16, dilations = var_248, groups = var_20, pad = input_65_pad_0, pad_type = input_65_pad_type_0, strides = var_246, weight = model_model_6_m_0_cv2_conv_weight_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("input_65_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_251_cast_fp16 = silu(x = input_65_cast_fp16)[name = tensor<string, []>("op_251_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> input_67_cast_fp16 = add(x = var_229_cast_fp16_1, y = var_251_cast_fp16)[name = tensor<string, []>("input_67_cast_fp16")];
            tensor<int32, [2]> var_258 = const()[name = tensor<string, []>("op_258"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_260 = const()[name = tensor<string, []>("op_260"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_69_pad_type_0 = const()[name = tensor<string, []>("input_69_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_69_pad_0 = const()[name = tensor<string, []>("input_69_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_6_m_1_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_1_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1952960)))];
            tensor<fp16, [128]> model_model_6_m_1_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_1_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2247936)))];
            tensor<fp16, [1, 128, 40, 40]> input_69_cast_fp16 = conv(bias = model_model_6_m_1_cv1_conv_bias_to_fp16, dilations = var_260, groups = var_20, pad = input_69_pad_0, pad_type = input_69_pad_type_0, strides = var_258, weight = model_model_6_m_1_cv1_conv_weight_to_fp16, x = input_67_cast_fp16)[name = tensor<string, []>("input_69_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> input_71_cast_fp16 = silu(x = input_69_cast_fp16)[name = tensor<string, []>("input_71_cast_fp16")];
            tensor<int32, [2]> var_267 = const()[name = tensor<string, []>("op_267"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_269 = const()[name = tensor<string, []>("op_269"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_73_pad_type_0 = const()[name = tensor<string, []>("input_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_73_pad_0 = const()[name = tensor<string, []>("input_73_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_6_m_1_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_1_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2248256)))];
            tensor<fp16, [128]> model_model_6_m_1_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_1_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2543232)))];
            tensor<fp16, [1, 128, 40, 40]> input_73_cast_fp16 = conv(bias = model_model_6_m_1_cv2_conv_bias_to_fp16, dilations = var_269, groups = var_20, pad = input_73_pad_0, pad_type = input_73_pad_type_0, strides = var_267, weight = model_model_6_m_1_cv2_conv_weight_to_fp16, x = input_71_cast_fp16)[name = tensor<string, []>("input_73_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_272_cast_fp16 = silu(x = input_73_cast_fp16)[name = tensor<string, []>("op_272_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_273_cast_fp16 = add(x = input_67_cast_fp16, y = var_272_cast_fp16)[name = tensor<string, []>("op_273_cast_fp16")];
            tensor<bool, []> input_75_interleave_0 = const()[name = tensor<string, []>("input_75_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 40, 40]> input_75_cast_fp16 = concat(axis = var_20, interleave = input_75_interleave_0, values = (var_229_cast_fp16_0, var_229_cast_fp16_1, input_67_cast_fp16, var_273_cast_fp16))[name = tensor<string, []>("input_75_cast_fp16")];
            tensor<int32, [2]> var_279 = const()[name = tensor<string, []>("op_279"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_281 = const()[name = tensor<string, []>("op_281"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_77_pad_type_0 = const()[name = tensor<string, []>("input_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_77_pad_0 = const()[name = tensor<string, []>("input_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 512, 1, 1]> model_model_6_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2543552)))];
            tensor<fp16, [256]> model_model_6_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2805760)))];
            tensor<fp16, [1, 256, 40, 40]> input_77_cast_fp16 = conv(bias = model_model_6_cv2_conv_bias_to_fp16, dilations = var_281, groups = var_20, pad = input_77_pad_0, pad_type = input_77_pad_type_0, strides = var_279, weight = model_model_6_cv2_conv_weight_to_fp16, x = input_75_cast_fp16)[name = tensor<string, []>("input_77_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> input_79_cast_fp16 = silu(x = input_77_cast_fp16)[name = tensor<string, []>("input_79_cast_fp16")];
            tensor<int32, [2]> var_288 = const()[name = tensor<string, []>("op_288"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_290 = const()[name = tensor<string, []>("op_290"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_81_pad_type_0 = const()[name = tensor<string, []>("input_81_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_81_pad_0 = const()[name = tensor<string, []>("input_81_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 256, 3, 3]> model_model_7_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_7_conv_weight_to_fp16"), val = tensor<fp16, [512, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2806336)))];
            tensor<fp16, [512]> model_model_7_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_7_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5165696)))];
            tensor<fp16, [1, 512, 20, 20]> input_81_cast_fp16 = conv(bias = model_model_7_conv_bias_to_fp16, dilations = var_290, groups = var_20, pad = input_81_pad_0, pad_type = input_81_pad_type_0, strides = var_288, weight = model_model_7_conv_weight_to_fp16, x = input_79_cast_fp16)[name = tensor<string, []>("input_81_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> input_83_cast_fp16 = silu(x = input_81_cast_fp16)[name = tensor<string, []>("input_83_cast_fp16")];
            tensor<int32, [2]> var_301 = const()[name = tensor<string, []>("op_301"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_303 = const()[name = tensor<string, []>("op_303"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_85_pad_type_0 = const()[name = tensor<string, []>("input_85_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_85_pad_0 = const()[name = tensor<string, []>("input_85_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> model_model_8_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_8_cv1_conv_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5166784)))];
            tensor<fp16, [512]> model_model_8_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_8_cv1_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5691136)))];
            tensor<fp16, [1, 512, 20, 20]> input_85_cast_fp16 = conv(bias = model_model_8_cv1_conv_bias_to_fp16, dilations = var_303, groups = var_20, pad = input_85_pad_0, pad_type = input_85_pad_type_0, strides = var_301, weight = model_model_8_cv1_conv_weight_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("input_85_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> var_306_cast_fp16 = silu(x = input_85_cast_fp16)[name = tensor<string, []>("op_306_cast_fp16")];
            tensor<int32, [2]> var_307 = const()[name = tensor<string, []>("op_307"), val = tensor<int32, [2]>([256, 256])];
            tensor<int32, []> var_308_axis_0 = const()[name = tensor<string, []>("op_308_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 256, 20, 20]> var_308_cast_fp16_0, tensor<fp16, [1, 256, 20, 20]> var_308_cast_fp16_1 = split(axis = var_308_axis_0, split_sizes = var_307, x = var_306_cast_fp16)[name = tensor<string, []>("op_308_cast_fp16")];
            tensor<int32, [2]> var_316 = const()[name = tensor<string, []>("op_316"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_318 = const()[name = tensor<string, []>("op_318"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_89_pad_type_0 = const()[name = tensor<string, []>("input_89_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_89_pad_0 = const()[name = tensor<string, []>("input_89_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> model_model_8_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_8_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5692224)))];
            tensor<fp16, [256]> model_model_8_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_8_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6871936)))];
            tensor<fp16, [1, 256, 20, 20]> input_89_cast_fp16 = conv(bias = model_model_8_m_0_cv1_conv_bias_to_fp16, dilations = var_318, groups = var_20, pad = input_89_pad_0, pad_type = input_89_pad_type_0, strides = var_316, weight = model_model_8_m_0_cv1_conv_weight_to_fp16, x = var_308_cast_fp16_1)[name = tensor<string, []>("input_89_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> input_91_cast_fp16 = silu(x = input_89_cast_fp16)[name = tensor<string, []>("input_91_cast_fp16")];
            tensor<int32, [2]> var_325 = const()[name = tensor<string, []>("op_325"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_327 = const()[name = tensor<string, []>("op_327"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_93_pad_type_0 = const()[name = tensor<string, []>("input_93_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_93_pad_0 = const()[name = tensor<string, []>("input_93_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> model_model_8_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_8_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6872512)))];
            tensor<fp16, [256]> model_model_8_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_8_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8052224)))];
            tensor<fp16, [1, 256, 20, 20]> input_93_cast_fp16 = conv(bias = model_model_8_m_0_cv2_conv_bias_to_fp16, dilations = var_327, groups = var_20, pad = input_93_pad_0, pad_type = input_93_pad_type_0, strides = var_325, weight = model_model_8_m_0_cv2_conv_weight_to_fp16, x = input_91_cast_fp16)[name = tensor<string, []>("input_93_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> var_330_cast_fp16 = silu(x = input_93_cast_fp16)[name = tensor<string, []>("op_330_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> var_331_cast_fp16 = add(x = var_308_cast_fp16_1, y = var_330_cast_fp16)[name = tensor<string, []>("op_331_cast_fp16")];
            tensor<bool, []> input_95_interleave_0 = const()[name = tensor<string, []>("input_95_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 768, 20, 20]> input_95_cast_fp16 = concat(axis = var_20, interleave = input_95_interleave_0, values = (var_308_cast_fp16_0, var_308_cast_fp16_1, var_331_cast_fp16))[name = tensor<string, []>("input_95_cast_fp16")];
            tensor<int32, [2]> var_337 = const()[name = tensor<string, []>("op_337"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_339 = const()[name = tensor<string, []>("op_339"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_97_pad_type_0 = const()[name = tensor<string, []>("input_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_97_pad_0 = const()[name = tensor<string, []>("input_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 768, 1, 1]> model_model_8_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_8_cv2_conv_weight_to_fp16"), val = tensor<fp16, [512, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8052800)))];
            tensor<fp16, [512]> model_model_8_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_8_cv2_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8839296)))];
            tensor<fp16, [1, 512, 20, 20]> input_97_cast_fp16 = conv(bias = model_model_8_cv2_conv_bias_to_fp16, dilations = var_339, groups = var_20, pad = input_97_pad_0, pad_type = input_97_pad_type_0, strides = var_337, weight = model_model_8_cv2_conv_weight_to_fp16, x = input_95_cast_fp16)[name = tensor<string, []>("input_97_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> input_99_cast_fp16 = silu(x = input_97_cast_fp16)[name = tensor<string, []>("input_99_cast_fp16")];
            tensor<int32, [2]> var_348 = const()[name = tensor<string, []>("op_348"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_350 = const()[name = tensor<string, []>("op_350"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_101_pad_type_0 = const()[name = tensor<string, []>("input_101_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_101_pad_0 = const()[name = tensor<string, []>("input_101_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 512, 1, 1]> model_model_9_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_9_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8840384)))];
            tensor<fp16, [256]> model_model_9_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_9_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9102592)))];
            tensor<fp16, [1, 256, 20, 20]> input_101_cast_fp16 = conv(bias = model_model_9_cv1_conv_bias_to_fp16, dilations = var_350, groups = var_20, pad = input_101_pad_0, pad_type = input_101_pad_type_0, strides = var_348, weight = model_model_9_cv1_conv_weight_to_fp16, x = input_99_cast_fp16)[name = tensor<string, []>("input_101_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> input_103_cast_fp16 = silu(x = input_101_cast_fp16)[name = tensor<string, []>("input_103_cast_fp16")];
            tensor<int32, [2]> var_354 = const()[name = tensor<string, []>("op_354"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_355 = const()[name = tensor<string, []>("op_355"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_105_pad_type_0 = const()[name = tensor<string, []>("input_105_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_105_pad_0 = const()[name = tensor<string, []>("input_105_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> input_105_ceil_mode_0 = const()[name = tensor<string, []>("input_105_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 256, 20, 20]> input_105_cast_fp16 = max_pool(ceil_mode = input_105_ceil_mode_0, kernel_sizes = var_354, pad = input_105_pad_0, pad_type = input_105_pad_type_0, strides = var_355, x = input_103_cast_fp16)[name = tensor<string, []>("input_105_cast_fp16")];
            tensor<int32, [2]> var_359 = const()[name = tensor<string, []>("op_359"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_360 = const()[name = tensor<string, []>("op_360"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_107_pad_type_0 = const()[name = tensor<string, []>("input_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_107_pad_0 = const()[name = tensor<string, []>("input_107_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> input_107_ceil_mode_0 = const()[name = tensor<string, []>("input_107_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 256, 20, 20]> input_107_cast_fp16 = max_pool(ceil_mode = input_107_ceil_mode_0, kernel_sizes = var_359, pad = input_107_pad_0, pad_type = input_107_pad_type_0, strides = var_360, x = input_105_cast_fp16)[name = tensor<string, []>("input_107_cast_fp16")];
            tensor<int32, [2]> var_364 = const()[name = tensor<string, []>("op_364"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_365 = const()[name = tensor<string, []>("op_365"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_368_pad_type_0 = const()[name = tensor<string, []>("op_368_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_368_pad_0 = const()[name = tensor<string, []>("op_368_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> var_368_ceil_mode_0 = const()[name = tensor<string, []>("op_368_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 256, 20, 20]> var_368_cast_fp16 = max_pool(ceil_mode = var_368_ceil_mode_0, kernel_sizes = var_364, pad = var_368_pad_0, pad_type = var_368_pad_type_0, strides = var_365, x = input_107_cast_fp16)[name = tensor<string, []>("op_368_cast_fp16")];
            tensor<bool, []> input_109_interleave_0 = const()[name = tensor<string, []>("input_109_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 20, 20]> input_109_cast_fp16 = concat(axis = var_20, interleave = input_109_interleave_0, values = (input_103_cast_fp16, input_105_cast_fp16, input_107_cast_fp16, var_368_cast_fp16))[name = tensor<string, []>("input_109_cast_fp16")];
            tensor<int32, [2]> var_374 = const()[name = tensor<string, []>("op_374"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_376 = const()[name = tensor<string, []>("op_376"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_111_pad_type_0 = const()[name = tensor<string, []>("input_111_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_111_pad_0 = const()[name = tensor<string, []>("input_111_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1024, 1, 1]> model_model_9_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_9_cv2_conv_weight_to_fp16"), val = tensor<fp16, [512, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9103168)))];
            tensor<fp16, [512]> model_model_9_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_9_cv2_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10151808)))];
            tensor<fp16, [1, 512, 20, 20]> input_111_cast_fp16 = conv(bias = model_model_9_cv2_conv_bias_to_fp16, dilations = var_376, groups = var_20, pad = input_111_pad_0, pad_type = input_111_pad_type_0, strides = var_374, weight = model_model_9_cv2_conv_weight_to_fp16, x = input_109_cast_fp16)[name = tensor<string, []>("input_111_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> input_113_cast_fp16 = silu(x = input_111_cast_fp16)[name = tensor<string, []>("input_113_cast_fp16")];
            tensor<fp32, []> var_381_scale_factor_height_0 = const()[name = tensor<string, []>("op_381_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> var_381_scale_factor_width_0 = const()[name = tensor<string, []>("op_381_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 512, 40, 40]> var_381_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = var_381_scale_factor_height_0, scale_factor_width = var_381_scale_factor_width_0, x = input_113_cast_fp16)[name = tensor<string, []>("op_381_cast_fp16")];
            tensor<bool, []> input_115_interleave_0 = const()[name = tensor<string, []>("input_115_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 768, 40, 40]> input_115_cast_fp16 = concat(axis = var_20, interleave = input_115_interleave_0, values = (var_381_cast_fp16, input_79_cast_fp16))[name = tensor<string, []>("input_115_cast_fp16")];
            tensor<int32, [2]> var_391 = const()[name = tensor<string, []>("op_391"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_393 = const()[name = tensor<string, []>("op_393"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_117_pad_type_0 = const()[name = tensor<string, []>("input_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_117_pad_0 = const()[name = tensor<string, []>("input_117_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 768, 1, 1]> model_model_12_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_12_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10152896)))];
            tensor<fp16, [256]> model_model_12_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_12_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10546176)))];
            tensor<fp16, [1, 256, 40, 40]> input_117_cast_fp16 = conv(bias = model_model_12_cv1_conv_bias_to_fp16, dilations = var_393, groups = var_20, pad = input_117_pad_0, pad_type = input_117_pad_type_0, strides = var_391, weight = model_model_12_cv1_conv_weight_to_fp16, x = input_115_cast_fp16)[name = tensor<string, []>("input_117_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> var_396_cast_fp16 = silu(x = input_117_cast_fp16)[name = tensor<string, []>("op_396_cast_fp16")];
            tensor<int32, [2]> var_397 = const()[name = tensor<string, []>("op_397"), val = tensor<int32, [2]>([128, 128])];
            tensor<int32, []> var_398_axis_0 = const()[name = tensor<string, []>("op_398_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 40, 40]> var_398_cast_fp16_0, tensor<fp16, [1, 128, 40, 40]> var_398_cast_fp16_1 = split(axis = var_398_axis_0, split_sizes = var_397, x = var_396_cast_fp16)[name = tensor<string, []>("op_398_cast_fp16")];
            tensor<int32, [2]> var_406 = const()[name = tensor<string, []>("op_406"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_408 = const()[name = tensor<string, []>("op_408"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_121_pad_type_0 = const()[name = tensor<string, []>("input_121_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_121_pad_0 = const()[name = tensor<string, []>("input_121_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_12_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_12_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10546752)))];
            tensor<fp16, [128]> model_model_12_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_12_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10841728)))];
            tensor<fp16, [1, 128, 40, 40]> input_121_cast_fp16 = conv(bias = model_model_12_m_0_cv1_conv_bias_to_fp16, dilations = var_408, groups = var_20, pad = input_121_pad_0, pad_type = input_121_pad_type_0, strides = var_406, weight = model_model_12_m_0_cv1_conv_weight_to_fp16, x = var_398_cast_fp16_1)[name = tensor<string, []>("input_121_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> input_123_cast_fp16 = silu(x = input_121_cast_fp16)[name = tensor<string, []>("input_123_cast_fp16")];
            tensor<int32, [2]> var_415 = const()[name = tensor<string, []>("op_415"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_417 = const()[name = tensor<string, []>("op_417"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_125_pad_type_0 = const()[name = tensor<string, []>("input_125_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_125_pad_0 = const()[name = tensor<string, []>("input_125_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_12_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_12_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10842048)))];
            tensor<fp16, [128]> model_model_12_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_12_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11137024)))];
            tensor<fp16, [1, 128, 40, 40]> input_125_cast_fp16 = conv(bias = model_model_12_m_0_cv2_conv_bias_to_fp16, dilations = var_417, groups = var_20, pad = input_125_pad_0, pad_type = input_125_pad_type_0, strides = var_415, weight = model_model_12_m_0_cv2_conv_weight_to_fp16, x = input_123_cast_fp16)[name = tensor<string, []>("input_125_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_420_cast_fp16 = silu(x = input_125_cast_fp16)[name = tensor<string, []>("op_420_cast_fp16")];
            tensor<bool, []> input_127_interleave_0 = const()[name = tensor<string, []>("input_127_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 40, 40]> input_127_cast_fp16 = concat(axis = var_20, interleave = input_127_interleave_0, values = (var_398_cast_fp16_0, var_398_cast_fp16_1, var_420_cast_fp16))[name = tensor<string, []>("input_127_cast_fp16")];
            tensor<int32, [2]> var_426 = const()[name = tensor<string, []>("op_426"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_428 = const()[name = tensor<string, []>("op_428"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_129_pad_type_0 = const()[name = tensor<string, []>("input_129_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_129_pad_0 = const()[name = tensor<string, []>("input_129_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_model_12_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_12_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11137344)))];
            tensor<fp16, [256]> model_model_12_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_12_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11334016)))];
            tensor<fp16, [1, 256, 40, 40]> input_129_cast_fp16 = conv(bias = model_model_12_cv2_conv_bias_to_fp16, dilations = var_428, groups = var_20, pad = input_129_pad_0, pad_type = input_129_pad_type_0, strides = var_426, weight = model_model_12_cv2_conv_weight_to_fp16, x = input_127_cast_fp16)[name = tensor<string, []>("input_129_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> input_131_cast_fp16 = silu(x = input_129_cast_fp16)[name = tensor<string, []>("input_131_cast_fp16")];
            tensor<fp32, []> var_433_scale_factor_height_0 = const()[name = tensor<string, []>("op_433_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> var_433_scale_factor_width_0 = const()[name = tensor<string, []>("op_433_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 256, 80, 80]> var_433_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = var_433_scale_factor_height_0, scale_factor_width = var_433_scale_factor_width_0, x = input_131_cast_fp16)[name = tensor<string, []>("op_433_cast_fp16")];
            tensor<bool, []> input_133_interleave_0 = const()[name = tensor<string, []>("input_133_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 80, 80]> input_133_cast_fp16 = concat(axis = var_20, interleave = input_133_interleave_0, values = (var_433_cast_fp16, input_51_cast_fp16))[name = tensor<string, []>("input_133_cast_fp16")];
            tensor<int32, [2]> var_443 = const()[name = tensor<string, []>("op_443"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_445 = const()[name = tensor<string, []>("op_445"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_135_pad_type_0 = const()[name = tensor<string, []>("input_135_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_135_pad_0 = const()[name = tensor<string, []>("input_135_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 384, 1, 1]> model_model_15_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_15_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11334592)))];
            tensor<fp16, [128]> model_model_15_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_15_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11432960)))];
            tensor<fp16, [1, 128, 80, 80]> input_135_cast_fp16 = conv(bias = model_model_15_cv1_conv_bias_to_fp16, dilations = var_445, groups = var_20, pad = input_135_pad_0, pad_type = input_135_pad_type_0, strides = var_443, weight = model_model_15_cv1_conv_weight_to_fp16, x = input_133_cast_fp16)[name = tensor<string, []>("input_135_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> var_448_cast_fp16 = silu(x = input_135_cast_fp16)[name = tensor<string, []>("op_448_cast_fp16")];
            tensor<int32, [2]> var_449 = const()[name = tensor<string, []>("op_449"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_450_axis_0 = const()[name = tensor<string, []>("op_450_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 80, 80]> var_450_cast_fp16_0, tensor<fp16, [1, 64, 80, 80]> var_450_cast_fp16_1 = split(axis = var_450_axis_0, split_sizes = var_449, x = var_448_cast_fp16)[name = tensor<string, []>("op_450_cast_fp16")];
            tensor<int32, [2]> var_458 = const()[name = tensor<string, []>("op_458"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_460 = const()[name = tensor<string, []>("op_460"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_139_pad_type_0 = const()[name = tensor<string, []>("input_139_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_139_pad_0 = const()[name = tensor<string, []>("input_139_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_15_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_15_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11433280)))];
            tensor<fp16, [64]> model_model_15_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_15_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11507072)))];
            tensor<fp16, [1, 64, 80, 80]> input_139_cast_fp16 = conv(bias = model_model_15_m_0_cv1_conv_bias_to_fp16, dilations = var_460, groups = var_20, pad = input_139_pad_0, pad_type = input_139_pad_type_0, strides = var_458, weight = model_model_15_m_0_cv1_conv_weight_to_fp16, x = var_450_cast_fp16_1)[name = tensor<string, []>("input_139_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_141_cast_fp16 = silu(x = input_139_cast_fp16)[name = tensor<string, []>("input_141_cast_fp16")];
            tensor<int32, [2]> var_467 = const()[name = tensor<string, []>("op_467"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_469 = const()[name = tensor<string, []>("op_469"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_143_pad_type_0 = const()[name = tensor<string, []>("input_143_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_143_pad_0 = const()[name = tensor<string, []>("input_143_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_15_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_15_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11507264)))];
            tensor<fp16, [64]> model_model_15_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_15_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11581056)))];
            tensor<fp16, [1, 64, 80, 80]> input_143_cast_fp16 = conv(bias = model_model_15_m_0_cv2_conv_bias_to_fp16, dilations = var_469, groups = var_20, pad = input_143_pad_0, pad_type = input_143_pad_type_0, strides = var_467, weight = model_model_15_m_0_cv2_conv_weight_to_fp16, x = input_141_cast_fp16)[name = tensor<string, []>("input_143_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> var_472_cast_fp16 = silu(x = input_143_cast_fp16)[name = tensor<string, []>("op_472_cast_fp16")];
            tensor<bool, []> input_145_interleave_0 = const()[name = tensor<string, []>("input_145_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 80, 80]> input_145_cast_fp16 = concat(axis = var_20, interleave = input_145_interleave_0, values = (var_450_cast_fp16_0, var_450_cast_fp16_1, var_472_cast_fp16))[name = tensor<string, []>("input_145_cast_fp16")];
            tensor<int32, [2]> var_478 = const()[name = tensor<string, []>("op_478"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_480 = const()[name = tensor<string, []>("op_480"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_147_pad_type_0 = const()[name = tensor<string, []>("input_147_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_147_pad_0 = const()[name = tensor<string, []>("input_147_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 192, 1, 1]> model_model_15_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_15_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11581248)))];
            tensor<fp16, [128]> model_model_15_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_15_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11630464)))];
            tensor<fp16, [1, 128, 80, 80]> input_147_cast_fp16 = conv(bias = model_model_15_cv2_conv_bias_to_fp16, dilations = var_480, groups = var_20, pad = input_147_pad_0, pad_type = input_147_pad_type_0, strides = var_478, weight = model_model_15_cv2_conv_weight_to_fp16, x = input_145_cast_fp16)[name = tensor<string, []>("input_147_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> input_149_cast_fp16 = silu(x = input_147_cast_fp16)[name = tensor<string, []>("input_149_cast_fp16")];
            tensor<int32, [2]> var_487 = const()[name = tensor<string, []>("op_487"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_489 = const()[name = tensor<string, []>("op_489"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_151_pad_type_0 = const()[name = tensor<string, []>("input_151_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_151_pad_0 = const()[name = tensor<string, []>("input_151_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_16_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_16_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11630784)))];
            tensor<fp16, [128]> model_model_16_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_16_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11925760)))];
            tensor<fp16, [1, 128, 40, 40]> input_151_cast_fp16 = conv(bias = model_model_16_conv_bias_to_fp16, dilations = var_489, groups = var_20, pad = input_151_pad_0, pad_type = input_151_pad_type_0, strides = var_487, weight = model_model_16_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_151_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_492_cast_fp16 = silu(x = input_151_cast_fp16)[name = tensor<string, []>("op_492_cast_fp16")];
            tensor<bool, []> input_153_interleave_0 = const()[name = tensor<string, []>("input_153_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 40, 40]> input_153_cast_fp16 = concat(axis = var_20, interleave = input_153_interleave_0, values = (var_492_cast_fp16, input_131_cast_fp16))[name = tensor<string, []>("input_153_cast_fp16")];
            tensor<int32, [2]> var_502 = const()[name = tensor<string, []>("op_502"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_504 = const()[name = tensor<string, []>("op_504"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_155_pad_type_0 = const()[name = tensor<string, []>("input_155_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_155_pad_0 = const()[name = tensor<string, []>("input_155_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_model_18_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_18_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11926080)))];
            tensor<fp16, [256]> model_model_18_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_18_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12122752)))];
            tensor<fp16, [1, 256, 40, 40]> input_155_cast_fp16 = conv(bias = model_model_18_cv1_conv_bias_to_fp16, dilations = var_504, groups = var_20, pad = input_155_pad_0, pad_type = input_155_pad_type_0, strides = var_502, weight = model_model_18_cv1_conv_weight_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("input_155_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> var_507_cast_fp16 = silu(x = input_155_cast_fp16)[name = tensor<string, []>("op_507_cast_fp16")];
            tensor<int32, [2]> var_508 = const()[name = tensor<string, []>("op_508"), val = tensor<int32, [2]>([128, 128])];
            tensor<int32, []> var_509_axis_0 = const()[name = tensor<string, []>("op_509_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 40, 40]> var_509_cast_fp16_0, tensor<fp16, [1, 128, 40, 40]> var_509_cast_fp16_1 = split(axis = var_509_axis_0, split_sizes = var_508, x = var_507_cast_fp16)[name = tensor<string, []>("op_509_cast_fp16")];
            tensor<int32, [2]> var_517 = const()[name = tensor<string, []>("op_517"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_519 = const()[name = tensor<string, []>("op_519"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_159_pad_type_0 = const()[name = tensor<string, []>("input_159_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_159_pad_0 = const()[name = tensor<string, []>("input_159_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_18_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_18_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12123328)))];
            tensor<fp16, [128]> model_model_18_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_18_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12418304)))];
            tensor<fp16, [1, 128, 40, 40]> input_159_cast_fp16 = conv(bias = model_model_18_m_0_cv1_conv_bias_to_fp16, dilations = var_519, groups = var_20, pad = input_159_pad_0, pad_type = input_159_pad_type_0, strides = var_517, weight = model_model_18_m_0_cv1_conv_weight_to_fp16, x = var_509_cast_fp16_1)[name = tensor<string, []>("input_159_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> input_161_cast_fp16 = silu(x = input_159_cast_fp16)[name = tensor<string, []>("input_161_cast_fp16")];
            tensor<int32, [2]> var_526 = const()[name = tensor<string, []>("op_526"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_528 = const()[name = tensor<string, []>("op_528"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_163_pad_type_0 = const()[name = tensor<string, []>("input_163_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_163_pad_0 = const()[name = tensor<string, []>("input_163_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_18_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_18_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12418624)))];
            tensor<fp16, [128]> model_model_18_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_18_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12713600)))];
            tensor<fp16, [1, 128, 40, 40]> input_163_cast_fp16 = conv(bias = model_model_18_m_0_cv2_conv_bias_to_fp16, dilations = var_528, groups = var_20, pad = input_163_pad_0, pad_type = input_163_pad_type_0, strides = var_526, weight = model_model_18_m_0_cv2_conv_weight_to_fp16, x = input_161_cast_fp16)[name = tensor<string, []>("input_163_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_531_cast_fp16 = silu(x = input_163_cast_fp16)[name = tensor<string, []>("op_531_cast_fp16")];
            tensor<bool, []> input_165_interleave_0 = const()[name = tensor<string, []>("input_165_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 40, 40]> input_165_cast_fp16 = concat(axis = var_20, interleave = input_165_interleave_0, values = (var_509_cast_fp16_0, var_509_cast_fp16_1, var_531_cast_fp16))[name = tensor<string, []>("input_165_cast_fp16")];
            tensor<int32, [2]> var_537 = const()[name = tensor<string, []>("op_537"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_539 = const()[name = tensor<string, []>("op_539"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_167_pad_type_0 = const()[name = tensor<string, []>("input_167_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_167_pad_0 = const()[name = tensor<string, []>("input_167_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_model_18_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_18_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12713920)))];
            tensor<fp16, [256]> model_model_18_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_18_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12910592)))];
            tensor<fp16, [1, 256, 40, 40]> input_167_cast_fp16 = conv(bias = model_model_18_cv2_conv_bias_to_fp16, dilations = var_539, groups = var_20, pad = input_167_pad_0, pad_type = input_167_pad_type_0, strides = var_537, weight = model_model_18_cv2_conv_weight_to_fp16, x = input_165_cast_fp16)[name = tensor<string, []>("input_167_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> input_169_cast_fp16 = silu(x = input_167_cast_fp16)[name = tensor<string, []>("input_169_cast_fp16")];
            tensor<int32, [2]> var_546 = const()[name = tensor<string, []>("op_546"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_548 = const()[name = tensor<string, []>("op_548"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_171_pad_type_0 = const()[name = tensor<string, []>("input_171_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_171_pad_0 = const()[name = tensor<string, []>("input_171_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> model_model_19_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_19_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12911168)))];
            tensor<fp16, [256]> model_model_19_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_19_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14090880)))];
            tensor<fp16, [1, 256, 20, 20]> input_171_cast_fp16 = conv(bias = model_model_19_conv_bias_to_fp16, dilations = var_548, groups = var_20, pad = input_171_pad_0, pad_type = input_171_pad_type_0, strides = var_546, weight = model_model_19_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_171_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> var_551_cast_fp16 = silu(x = input_171_cast_fp16)[name = tensor<string, []>("op_551_cast_fp16")];
            tensor<bool, []> input_173_interleave_0 = const()[name = tensor<string, []>("input_173_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 768, 20, 20]> input_173_cast_fp16 = concat(axis = var_20, interleave = input_173_interleave_0, values = (var_551_cast_fp16, input_113_cast_fp16))[name = tensor<string, []>("input_173_cast_fp16")];
            tensor<int32, [2]> var_561 = const()[name = tensor<string, []>("op_561"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_563 = const()[name = tensor<string, []>("op_563"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_175_pad_type_0 = const()[name = tensor<string, []>("input_175_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_175_pad_0 = const()[name = tensor<string, []>("input_175_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 768, 1, 1]> model_model_21_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_21_cv1_conv_weight_to_fp16"), val = tensor<fp16, [512, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14091456)))];
            tensor<fp16, [512]> model_model_21_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_21_cv1_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14877952)))];
            tensor<fp16, [1, 512, 20, 20]> input_175_cast_fp16 = conv(bias = model_model_21_cv1_conv_bias_to_fp16, dilations = var_563, groups = var_20, pad = input_175_pad_0, pad_type = input_175_pad_type_0, strides = var_561, weight = model_model_21_cv1_conv_weight_to_fp16, x = input_173_cast_fp16)[name = tensor<string, []>("input_175_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> var_566_cast_fp16 = silu(x = input_175_cast_fp16)[name = tensor<string, []>("op_566_cast_fp16")];
            tensor<int32, [2]> var_567 = const()[name = tensor<string, []>("op_567"), val = tensor<int32, [2]>([256, 256])];
            tensor<int32, []> var_568_axis_0 = const()[name = tensor<string, []>("op_568_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 256, 20, 20]> var_568_cast_fp16_0, tensor<fp16, [1, 256, 20, 20]> var_568_cast_fp16_1 = split(axis = var_568_axis_0, split_sizes = var_567, x = var_566_cast_fp16)[name = tensor<string, []>("op_568_cast_fp16")];
            tensor<int32, [2]> var_576 = const()[name = tensor<string, []>("op_576"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_578 = const()[name = tensor<string, []>("op_578"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_179_pad_type_0 = const()[name = tensor<string, []>("input_179_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_179_pad_0 = const()[name = tensor<string, []>("input_179_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> model_model_21_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_21_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14879040)))];
            tensor<fp16, [256]> model_model_21_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_21_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16058752)))];
            tensor<fp16, [1, 256, 20, 20]> input_179_cast_fp16 = conv(bias = model_model_21_m_0_cv1_conv_bias_to_fp16, dilations = var_578, groups = var_20, pad = input_179_pad_0, pad_type = input_179_pad_type_0, strides = var_576, weight = model_model_21_m_0_cv1_conv_weight_to_fp16, x = var_568_cast_fp16_1)[name = tensor<string, []>("input_179_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> input_181_cast_fp16 = silu(x = input_179_cast_fp16)[name = tensor<string, []>("input_181_cast_fp16")];
            tensor<int32, [2]> var_585 = const()[name = tensor<string, []>("op_585"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_587 = const()[name = tensor<string, []>("op_587"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_183_pad_type_0 = const()[name = tensor<string, []>("input_183_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_183_pad_0 = const()[name = tensor<string, []>("input_183_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> model_model_21_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_21_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16059328)))];
            tensor<fp16, [256]> model_model_21_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_21_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17239040)))];
            tensor<fp16, [1, 256, 20, 20]> input_183_cast_fp16 = conv(bias = model_model_21_m_0_cv2_conv_bias_to_fp16, dilations = var_587, groups = var_20, pad = input_183_pad_0, pad_type = input_183_pad_type_0, strides = var_585, weight = model_model_21_m_0_cv2_conv_weight_to_fp16, x = input_181_cast_fp16)[name = tensor<string, []>("input_183_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> var_590_cast_fp16 = silu(x = input_183_cast_fp16)[name = tensor<string, []>("op_590_cast_fp16")];
            tensor<bool, []> input_185_interleave_0 = const()[name = tensor<string, []>("input_185_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 768, 20, 20]> input_185_cast_fp16 = concat(axis = var_20, interleave = input_185_interleave_0, values = (var_568_cast_fp16_0, var_568_cast_fp16_1, var_590_cast_fp16))[name = tensor<string, []>("input_185_cast_fp16")];
            tensor<int32, [2]> var_596 = const()[name = tensor<string, []>("op_596"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_598 = const()[name = tensor<string, []>("op_598"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_187_pad_type_0 = const()[name = tensor<string, []>("input_187_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_187_pad_0 = const()[name = tensor<string, []>("input_187_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 768, 1, 1]> model_model_21_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_21_cv2_conv_weight_to_fp16"), val = tensor<fp16, [512, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17239616)))];
            tensor<fp16, [512]> model_model_21_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_21_cv2_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18026112)))];
            tensor<fp16, [1, 512, 20, 20]> input_187_cast_fp16 = conv(bias = model_model_21_cv2_conv_bias_to_fp16, dilations = var_598, groups = var_20, pad = input_187_pad_0, pad_type = input_187_pad_type_0, strides = var_596, weight = model_model_21_cv2_conv_weight_to_fp16, x = input_185_cast_fp16)[name = tensor<string, []>("input_187_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> input_221_cast_fp16 = silu(x = input_187_cast_fp16)[name = tensor<string, []>("input_221_cast_fp16")];
            tensor<int32, [2]> var_621 = const()[name = tensor<string, []>("op_621"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_623 = const()[name = tensor<string, []>("op_623"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_189_pad_type_0 = const()[name = tensor<string, []>("input_189_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_189_pad_0 = const()[name = tensor<string, []>("input_189_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 128, 3, 3]> model_model_22_cv2_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18027200)))];
            tensor<fp16, [64]> model_model_22_cv2_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18174720)))];
            tensor<fp16, [1, 64, 80, 80]> input_189_cast_fp16 = conv(bias = model_model_22_cv2_0_0_conv_bias_to_fp16, dilations = var_623, groups = var_20, pad = input_189_pad_0, pad_type = input_189_pad_type_0, strides = var_621, weight = model_model_22_cv2_0_0_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_189_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_191_cast_fp16 = silu(x = input_189_cast_fp16)[name = tensor<string, []>("input_191_cast_fp16")];
            tensor<int32, [2]> var_630 = const()[name = tensor<string, []>("op_630"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_632 = const()[name = tensor<string, []>("op_632"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_193_pad_type_0 = const()[name = tensor<string, []>("input_193_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_193_pad_0 = const()[name = tensor<string, []>("input_193_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv2_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18174912)))];
            tensor<fp16, [64]> model_model_22_cv2_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18248704)))];
            tensor<fp16, [1, 64, 80, 80]> input_193_cast_fp16 = conv(bias = model_model_22_cv2_0_1_conv_bias_to_fp16, dilations = var_632, groups = var_20, pad = input_193_pad_0, pad_type = input_193_pad_type_0, strides = var_630, weight = model_model_22_cv2_0_1_conv_weight_to_fp16, x = input_191_cast_fp16)[name = tensor<string, []>("input_193_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_195_cast_fp16 = silu(x = input_193_cast_fp16)[name = tensor<string, []>("input_195_cast_fp16")];
            tensor<int32, [2]> var_638 = const()[name = tensor<string, []>("op_638"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_640 = const()[name = tensor<string, []>("op_640"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_642_pad_type_0 = const()[name = tensor<string, []>("op_642_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_642_pad_0 = const()[name = tensor<string, []>("op_642_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_model_22_cv2_0_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18248896)))];
            tensor<fp16, [64]> model_model_22_cv2_0_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18257152)))];
            tensor<fp16, [1, 64, 80, 80]> var_642_cast_fp16 = conv(bias = model_model_22_cv2_0_2_bias_to_fp16, dilations = var_640, groups = var_20, pad = var_642_pad_0, pad_type = var_642_pad_type_0, strides = var_638, weight = model_model_22_cv2_0_2_weight_to_fp16, x = input_195_cast_fp16)[name = tensor<string, []>("op_642_cast_fp16")];
            tensor<int32, [2]> var_649 = const()[name = tensor<string, []>("op_649"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_651 = const()[name = tensor<string, []>("op_651"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_197_pad_type_0 = const()[name = tensor<string, []>("input_197_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_197_pad_0 = const()[name = tensor<string, []>("input_197_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_22_cv3_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_0_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18257344)))];
            tensor<fp16, [128]> model_model_22_cv3_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_0_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18552320)))];
            tensor<fp16, [1, 128, 80, 80]> input_197_cast_fp16 = conv(bias = model_model_22_cv3_0_0_conv_bias_to_fp16, dilations = var_651, groups = var_20, pad = input_197_pad_0, pad_type = input_197_pad_type_0, strides = var_649, weight = model_model_22_cv3_0_0_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_197_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> input_199_cast_fp16 = silu(x = input_197_cast_fp16)[name = tensor<string, []>("input_199_cast_fp16")];
            tensor<int32, [2]> var_658 = const()[name = tensor<string, []>("op_658"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_660 = const()[name = tensor<string, []>("op_660"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_201_pad_type_0 = const()[name = tensor<string, []>("input_201_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_201_pad_0 = const()[name = tensor<string, []>("input_201_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_22_cv3_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18552640)))];
            tensor<fp16, [128]> model_model_22_cv3_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18847616)))];
            tensor<fp16, [1, 128, 80, 80]> input_201_cast_fp16 = conv(bias = model_model_22_cv3_0_1_conv_bias_to_fp16, dilations = var_660, groups = var_20, pad = input_201_pad_0, pad_type = input_201_pad_type_0, strides = var_658, weight = model_model_22_cv3_0_1_conv_weight_to_fp16, x = input_199_cast_fp16)[name = tensor<string, []>("input_201_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> input_203_cast_fp16 = silu(x = input_201_cast_fp16)[name = tensor<string, []>("input_203_cast_fp16")];
            tensor<int32, [2]> var_666 = const()[name = tensor<string, []>("op_666"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_668 = const()[name = tensor<string, []>("op_668"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_670_pad_type_0 = const()[name = tensor<string, []>("op_670_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_670_pad_0 = const()[name = tensor<string, []>("op_670_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 128, 1, 1]> model_model_22_cv3_0_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_2_weight_to_fp16"), val = tensor<fp16, [80, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18847936)))];
            tensor<fp16, [80]> model_model_22_cv3_0_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_2_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18868480)))];
            tensor<fp16, [1, 80, 80, 80]> var_670_cast_fp16 = conv(bias = model_model_22_cv3_0_2_bias_to_fp16, dilations = var_668, groups = var_20, pad = var_670_pad_0, pad_type = var_670_pad_type_0, strides = var_666, weight = model_model_22_cv3_0_2_weight_to_fp16, x = input_203_cast_fp16)[name = tensor<string, []>("op_670_cast_fp16")];
            tensor<bool, []> xi_1_interleave_0 = const()[name = tensor<string, []>("xi_1_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 144, 80, 80]> xi_1_cast_fp16 = concat(axis = var_20, interleave = xi_1_interleave_0, values = (var_642_cast_fp16, var_670_cast_fp16))[name = tensor<string, []>("xi_1_cast_fp16")];
            tensor<int32, [2]> var_679 = const()[name = tensor<string, []>("op_679"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_681 = const()[name = tensor<string, []>("op_681"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_205_pad_type_0 = const()[name = tensor<string, []>("input_205_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_205_pad_0 = const()[name = tensor<string, []>("input_205_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 256, 3, 3]> model_model_22_cv2_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18868736)))];
            tensor<fp16, [64]> model_model_22_cv2_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19163712)))];
            tensor<fp16, [1, 64, 40, 40]> input_205_cast_fp16 = conv(bias = model_model_22_cv2_1_0_conv_bias_to_fp16, dilations = var_681, groups = var_20, pad = input_205_pad_0, pad_type = input_205_pad_type_0, strides = var_679, weight = model_model_22_cv2_1_0_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_205_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_207_cast_fp16 = silu(x = input_205_cast_fp16)[name = tensor<string, []>("input_207_cast_fp16")];
            tensor<int32, [2]> var_688 = const()[name = tensor<string, []>("op_688"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_690 = const()[name = tensor<string, []>("op_690"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_209_pad_type_0 = const()[name = tensor<string, []>("input_209_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_209_pad_0 = const()[name = tensor<string, []>("input_209_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv2_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19163904)))];
            tensor<fp16, [64]> model_model_22_cv2_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19237696)))];
            tensor<fp16, [1, 64, 40, 40]> input_209_cast_fp16 = conv(bias = model_model_22_cv2_1_1_conv_bias_to_fp16, dilations = var_690, groups = var_20, pad = input_209_pad_0, pad_type = input_209_pad_type_0, strides = var_688, weight = model_model_22_cv2_1_1_conv_weight_to_fp16, x = input_207_cast_fp16)[name = tensor<string, []>("input_209_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_211_cast_fp16 = silu(x = input_209_cast_fp16)[name = tensor<string, []>("input_211_cast_fp16")];
            tensor<int32, [2]> var_696 = const()[name = tensor<string, []>("op_696"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_698 = const()[name = tensor<string, []>("op_698"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_700_pad_type_0 = const()[name = tensor<string, []>("op_700_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_700_pad_0 = const()[name = tensor<string, []>("op_700_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_model_22_cv2_1_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19237888)))];
            tensor<fp16, [64]> model_model_22_cv2_1_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19246144)))];
            tensor<fp16, [1, 64, 40, 40]> var_700_cast_fp16 = conv(bias = model_model_22_cv2_1_2_bias_to_fp16, dilations = var_698, groups = var_20, pad = var_700_pad_0, pad_type = var_700_pad_type_0, strides = var_696, weight = model_model_22_cv2_1_2_weight_to_fp16, x = input_211_cast_fp16)[name = tensor<string, []>("op_700_cast_fp16")];
            tensor<int32, [2]> var_707 = const()[name = tensor<string, []>("op_707"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_709 = const()[name = tensor<string, []>("op_709"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_213_pad_type_0 = const()[name = tensor<string, []>("input_213_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_213_pad_0 = const()[name = tensor<string, []>("input_213_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 256, 3, 3]> model_model_22_cv3_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_0_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19246336)))];
            tensor<fp16, [128]> model_model_22_cv3_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_0_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19836224)))];
            tensor<fp16, [1, 128, 40, 40]> input_213_cast_fp16 = conv(bias = model_model_22_cv3_1_0_conv_bias_to_fp16, dilations = var_709, groups = var_20, pad = input_213_pad_0, pad_type = input_213_pad_type_0, strides = var_707, weight = model_model_22_cv3_1_0_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_213_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> input_215_cast_fp16 = silu(x = input_213_cast_fp16)[name = tensor<string, []>("input_215_cast_fp16")];
            tensor<int32, [2]> var_716 = const()[name = tensor<string, []>("op_716"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_718 = const()[name = tensor<string, []>("op_718"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_217_pad_type_0 = const()[name = tensor<string, []>("input_217_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_217_pad_0 = const()[name = tensor<string, []>("input_217_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_22_cv3_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19836544)))];
            tensor<fp16, [128]> model_model_22_cv3_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20131520)))];
            tensor<fp16, [1, 128, 40, 40]> input_217_cast_fp16 = conv(bias = model_model_22_cv3_1_1_conv_bias_to_fp16, dilations = var_718, groups = var_20, pad = input_217_pad_0, pad_type = input_217_pad_type_0, strides = var_716, weight = model_model_22_cv3_1_1_conv_weight_to_fp16, x = input_215_cast_fp16)[name = tensor<string, []>("input_217_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> input_219_cast_fp16 = silu(x = input_217_cast_fp16)[name = tensor<string, []>("input_219_cast_fp16")];
            tensor<int32, [2]> var_724 = const()[name = tensor<string, []>("op_724"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_726 = const()[name = tensor<string, []>("op_726"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_728_pad_type_0 = const()[name = tensor<string, []>("op_728_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_728_pad_0 = const()[name = tensor<string, []>("op_728_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 128, 1, 1]> model_model_22_cv3_1_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_2_weight_to_fp16"), val = tensor<fp16, [80, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20131840)))];
            tensor<fp16, [80]> model_model_22_cv3_1_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_2_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20152384)))];
            tensor<fp16, [1, 80, 40, 40]> var_728_cast_fp16 = conv(bias = model_model_22_cv3_1_2_bias_to_fp16, dilations = var_726, groups = var_20, pad = var_728_pad_0, pad_type = var_728_pad_type_0, strides = var_724, weight = model_model_22_cv3_1_2_weight_to_fp16, x = input_219_cast_fp16)[name = tensor<string, []>("op_728_cast_fp16")];
            tensor<bool, []> xi_3_interleave_0 = const()[name = tensor<string, []>("xi_3_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 144, 40, 40]> xi_3_cast_fp16 = concat(axis = var_20, interleave = xi_3_interleave_0, values = (var_700_cast_fp16, var_728_cast_fp16))[name = tensor<string, []>("xi_3_cast_fp16")];
            tensor<int32, [2]> var_737 = const()[name = tensor<string, []>("op_737"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_739 = const()[name = tensor<string, []>("op_739"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_223_pad_type_0 = const()[name = tensor<string, []>("input_223_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_223_pad_0 = const()[name = tensor<string, []>("input_223_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 512, 3, 3]> model_model_22_cv2_2_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20152640)))];
            tensor<fp16, [64]> model_model_22_cv2_2_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20742528)))];
            tensor<fp16, [1, 64, 20, 20]> input_223_cast_fp16 = conv(bias = model_model_22_cv2_2_0_conv_bias_to_fp16, dilations = var_739, groups = var_20, pad = input_223_pad_0, pad_type = input_223_pad_type_0, strides = var_737, weight = model_model_22_cv2_2_0_conv_weight_to_fp16, x = input_221_cast_fp16)[name = tensor<string, []>("input_223_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_225_cast_fp16 = silu(x = input_223_cast_fp16)[name = tensor<string, []>("input_225_cast_fp16")];
            tensor<int32, [2]> var_746 = const()[name = tensor<string, []>("op_746"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_748 = const()[name = tensor<string, []>("op_748"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_227_pad_type_0 = const()[name = tensor<string, []>("input_227_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_227_pad_0 = const()[name = tensor<string, []>("input_227_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv2_2_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20742720)))];
            tensor<fp16, [64]> model_model_22_cv2_2_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20816512)))];
            tensor<fp16, [1, 64, 20, 20]> input_227_cast_fp16 = conv(bias = model_model_22_cv2_2_1_conv_bias_to_fp16, dilations = var_748, groups = var_20, pad = input_227_pad_0, pad_type = input_227_pad_type_0, strides = var_746, weight = model_model_22_cv2_2_1_conv_weight_to_fp16, x = input_225_cast_fp16)[name = tensor<string, []>("input_227_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_229_cast_fp16 = silu(x = input_227_cast_fp16)[name = tensor<string, []>("input_229_cast_fp16")];
            tensor<int32, [2]> var_754 = const()[name = tensor<string, []>("op_754"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_756 = const()[name = tensor<string, []>("op_756"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_758_pad_type_0 = const()[name = tensor<string, []>("op_758_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_758_pad_0 = const()[name = tensor<string, []>("op_758_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_model_22_cv2_2_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20816704)))];
            tensor<fp16, [64]> model_model_22_cv2_2_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20824960)))];
            tensor<fp16, [1, 64, 20, 20]> var_758_cast_fp16 = conv(bias = model_model_22_cv2_2_2_bias_to_fp16, dilations = var_756, groups = var_20, pad = var_758_pad_0, pad_type = var_758_pad_type_0, strides = var_754, weight = model_model_22_cv2_2_2_weight_to_fp16, x = input_229_cast_fp16)[name = tensor<string, []>("op_758_cast_fp16")];
            tensor<int32, [2]> var_765 = const()[name = tensor<string, []>("op_765"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_767 = const()[name = tensor<string, []>("op_767"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_231_pad_type_0 = const()[name = tensor<string, []>("input_231_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_231_pad_0 = const()[name = tensor<string, []>("input_231_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 512, 3, 3]> model_model_22_cv3_2_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_0_conv_weight_to_fp16"), val = tensor<fp16, [128, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20825152)))];
            tensor<fp16, [128]> model_model_22_cv3_2_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_0_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22004864)))];
            tensor<fp16, [1, 128, 20, 20]> input_231_cast_fp16 = conv(bias = model_model_22_cv3_2_0_conv_bias_to_fp16, dilations = var_767, groups = var_20, pad = input_231_pad_0, pad_type = input_231_pad_type_0, strides = var_765, weight = model_model_22_cv3_2_0_conv_weight_to_fp16, x = input_221_cast_fp16)[name = tensor<string, []>("input_231_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_233_cast_fp16 = silu(x = input_231_cast_fp16)[name = tensor<string, []>("input_233_cast_fp16")];
            tensor<int32, [2]> var_774 = const()[name = tensor<string, []>("op_774"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_776 = const()[name = tensor<string, []>("op_776"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_235_pad_type_0 = const()[name = tensor<string, []>("input_235_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_235_pad_0 = const()[name = tensor<string, []>("input_235_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_22_cv3_2_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22005184)))];
            tensor<fp16, [128]> model_model_22_cv3_2_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22300160)))];
            tensor<fp16, [1, 128, 20, 20]> input_235_cast_fp16 = conv(bias = model_model_22_cv3_2_1_conv_bias_to_fp16, dilations = var_776, groups = var_20, pad = input_235_pad_0, pad_type = input_235_pad_type_0, strides = var_774, weight = model_model_22_cv3_2_1_conv_weight_to_fp16, x = input_233_cast_fp16)[name = tensor<string, []>("input_235_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_237_cast_fp16 = silu(x = input_235_cast_fp16)[name = tensor<string, []>("input_237_cast_fp16")];
            tensor<int32, [2]> var_782 = const()[name = tensor<string, []>("op_782"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_784 = const()[name = tensor<string, []>("op_784"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_786_pad_type_0 = const()[name = tensor<string, []>("op_786_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_786_pad_0 = const()[name = tensor<string, []>("op_786_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 128, 1, 1]> model_model_22_cv3_2_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_2_weight_to_fp16"), val = tensor<fp16, [80, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22300480)))];
            tensor<fp16, [80]> model_model_22_cv3_2_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_2_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22321024)))];
            tensor<fp16, [1, 80, 20, 20]> var_786_cast_fp16 = conv(bias = model_model_22_cv3_2_2_bias_to_fp16, dilations = var_784, groups = var_20, pad = var_786_pad_0, pad_type = var_786_pad_type_0, strides = var_782, weight = model_model_22_cv3_2_2_weight_to_fp16, x = input_237_cast_fp16)[name = tensor<string, []>("op_786_cast_fp16")];
            tensor<bool, []> xi_interleave_0 = const()[name = tensor<string, []>("xi_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 144, 20, 20]> xi_cast_fp16 = concat(axis = var_20, interleave = xi_interleave_0, values = (var_758_cast_fp16, var_786_cast_fp16))[name = tensor<string, []>("xi_cast_fp16")];
            tensor<int32, [3]> var_790 = const()[name = tensor<string, []>("op_790"), val = tensor<int32, [3]>([1, 144, -1])];
            tensor<fp16, [1, 144, 6400]> var_791_cast_fp16 = reshape(shape = var_790, x = xi_1_cast_fp16)[name = tensor<string, []>("op_791_cast_fp16")];
            tensor<int32, [3]> var_792 = const()[name = tensor<string, []>("op_792"), val = tensor<int32, [3]>([1, 144, -1])];
            tensor<fp16, [1, 144, 1600]> var_793_cast_fp16 = reshape(shape = var_792, x = xi_3_cast_fp16)[name = tensor<string, []>("op_793_cast_fp16")];
            tensor<int32, [3]> var_794 = const()[name = tensor<string, []>("op_794"), val = tensor<int32, [3]>([1, 144, -1])];
            tensor<fp16, [1, 144, 400]> var_795_cast_fp16 = reshape(shape = var_794, x = xi_cast_fp16)[name = tensor<string, []>("op_795_cast_fp16")];
            tensor<bool, []> var_797_interleave_0 = const()[name = tensor<string, []>("op_797_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 144, 8400]> var_797_cast_fp16 = concat(axis = var_21, interleave = var_797_interleave_0, values = (var_791_cast_fp16, var_793_cast_fp16, var_795_cast_fp16))[name = tensor<string, []>("op_797_cast_fp16")];
            tensor<int32, [2]> var_798 = const()[name = tensor<string, []>("op_798"), val = tensor<int32, [2]>([64, 80])];
            tensor<int32, []> var_799_axis_0 = const()[name = tensor<string, []>("op_799_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 8400]> var_799_cast_fp16_0, tensor<fp16, [1, 80, 8400]> var_799_cast_fp16_1 = split(axis = var_799_axis_0, split_sizes = var_798, x = var_797_cast_fp16)[name = tensor<string, []>("op_799_cast_fp16")];
            tensor<int32, [4]> var_805 = const()[name = tensor<string, []>("op_805"), val = tensor<int32, [4]>([1, 4, 16, 8400])];
            tensor<fp16, [1, 4, 16, 8400]> var_806_cast_fp16 = reshape(shape = var_805, x = var_799_cast_fp16_0)[name = tensor<string, []>("op_806_cast_fp16")];
            tensor<int32, [4]> var_807_perm_0 = const()[name = tensor<string, []>("op_807_perm_0"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<fp16, [1, 16, 4, 8400]> var_807_cast_fp16 = transpose(perm = var_807_perm_0, x = var_806_cast_fp16)[name = tensor<string, []>("transpose_1")];
            tensor<fp16, [1, 16, 4, 8400]> input_cast_fp16 = softmax(axis = var_20, x = var_807_cast_fp16)[name = tensor<string, []>("input_cast_fp16")];
            tensor<int32, [2]> var_810 = const()[name = tensor<string, []>("op_810"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_812 = const()[name = tensor<string, []>("op_812"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_814_pad_type_0 = const()[name = tensor<string, []>("op_814_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_814_pad_0 = const()[name = tensor<string, []>("op_814_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 16, 1, 1]> model_model_22_dfl_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_dfl_conv_weight_to_fp16"), val = tensor<fp16, [1, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22321280)))];
            tensor<fp16, [1, 1, 4, 8400]> var_814_cast_fp16 = conv(dilations = var_812, groups = var_20, pad = var_814_pad_0, pad_type = var_814_pad_type_0, strides = var_810, weight = model_model_22_dfl_conv_weight_to_fp16, x = input_cast_fp16)[name = tensor<string, []>("op_814_cast_fp16")];
            tensor<int32, [3]> var_815 = const()[name = tensor<string, []>("op_815"), val = tensor<int32, [3]>([1, 4, 8400])];
            tensor<fp16, [1, 4, 8400]> distance_cast_fp16 = reshape(shape = var_815, x = var_814_cast_fp16)[name = tensor<string, []>("distance_cast_fp16")];
            tensor<int32, [2]> var_818_split_sizes_0 = const()[name = tensor<string, []>("op_818_split_sizes_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, []> var_818_axis_0 = const()[name = tensor<string, []>("op_818_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 2, 8400]> var_818_cast_fp16_0, tensor<fp16, [1, 2, 8400]> var_818_cast_fp16_1 = split(axis = var_818_axis_0, split_sizes = var_818_split_sizes_0, x = distance_cast_fp16)[name = tensor<string, []>("op_818_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> anchor_points_to_fp16 = const()[name = tensor<string, []>("anchor_points_to_fp16"), val = tensor<fp16, [1, 2, 8400]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22321408)))];
            tensor<fp16, [1, 2, 8400]> x1y1_cast_fp16 = sub(x = anchor_points_to_fp16, y = var_818_cast_fp16_0)[name = tensor<string, []>("x1y1_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> x2y2_cast_fp16 = add(x = anchor_points_to_fp16, y = var_818_cast_fp16_1)[name = tensor<string, []>("x2y2_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> var_822_cast_fp16 = add(x = x1y1_cast_fp16, y = x2y2_cast_fp16)[name = tensor<string, []>("op_822_cast_fp16")];
            tensor<fp16, []> _inversed_c_xy_y_0_to_fp16 = const()[name = tensor<string, []>("_inversed_c_xy_y_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 2, 8400]> _inversed_c_xy_cast_fp16 = mul(x = var_822_cast_fp16, y = _inversed_c_xy_y_0_to_fp16)[name = tensor<string, []>("_inversed_c_xy_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> wh_cast_fp16 = sub(x = x2y2_cast_fp16, y = x1y1_cast_fp16)[name = tensor<string, []>("wh_cast_fp16")];
            tensor<bool, []> var_827_interleave_0 = const()[name = tensor<string, []>("op_827_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 4, 8400]> var_827_cast_fp16 = concat(axis = var_20, interleave = var_827_interleave_0, values = (_inversed_c_xy_cast_fp16, wh_cast_fp16))[name = tensor<string, []>("op_827_cast_fp16")];
            tensor<fp16, [1, 8400]> var_9_to_fp16 = const()[name = tensor<string, []>("op_9_to_fp16"), val = tensor<fp16, [1, 8400]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22355072)))];
            tensor<fp16, [1, 4, 8400]> dbox_cast_fp16 = mul(x = var_827_cast_fp16, y = var_9_to_fp16)[name = tensor<string, []>("dbox_cast_fp16")];
            tensor<fp16, [1, 80, 8400]> var_829_cast_fp16 = sigmoid(x = var_799_cast_fp16_1)[name = tensor<string, []>("op_829_cast_fp16")];
            tensor<bool, []> var_831_interleave_0 = const()[name = tensor<string, []>("op_831_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 84, 8400]> var_831_cast_fp16 = concat(axis = var_20, interleave = var_831_interleave_0, values = (dbox_cast_fp16, var_829_cast_fp16))[name = tensor<string, []>("op_831_cast_fp16")];
            tensor<int32, [3]> var_834_begin_0 = const()[name = tensor<string, []>("op_834_begin_0"), val = tensor<int32, [3]>([0, 0, 0])];
            tensor<int32, [3]> var_834_end_0 = const()[name = tensor<string, []>("op_834_end_0"), val = tensor<int32, [3]>([1, 84, 8400])];
            tensor<bool, [3]> var_834_end_mask_0 = const()[name = tensor<string, []>("op_834_end_mask_0"), val = tensor<bool, [3]>([false, true, true])];
            tensor<bool, [3]> var_834_squeeze_mask_0 = const()[name = tensor<string, []>("op_834_squeeze_mask_0"), val = tensor<bool, [3]>([true, false, false])];
            tensor<fp16, [84, 8400]> var_834_cast_fp16 = slice_by_index(begin = var_834_begin_0, end = var_834_end_0, end_mask = var_834_end_mask_0, squeeze_mask = var_834_squeeze_mask_0, x = var_831_cast_fp16)[name = tensor<string, []>("op_834_cast_fp16")];
            tensor<int32, [2]> var_837_perm_0 = const()[name = tensor<string, []>("op_837_perm_0"), val = tensor<int32, [2]>([1, 0])];
            tensor<int32, [2]> var_840 = const()[name = tensor<string, []>("op_840"), val = tensor<int32, [2]>([4, 80])];
            tensor<int32, []> var_842_axis_0 = const()[name = tensor<string, []>("op_842_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [8400, 84]> var_837_cast_fp16 = transpose(perm = var_837_perm_0, x = var_834_cast_fp16)[name = tensor<string, []>("transpose_0")];
            tensor<fp16, [8400, 4]> var_842_cast_fp16_0, tensor<fp16, [8400, 80]> var_842_cast_fp16_1 = split(axis = var_842_axis_0, split_sizes = var_840, x = var_837_cast_fp16)[name = tensor<string, []>("op_842_cast_fp16")];
            tensor<string, []> var_842_cast_fp16_1_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_842_cast_fp16_1_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp16, []> var_845_to_fp16 = const()[name = tensor<string, []>("op_845_to_fp16"), val = tensor<fp16, []>(0x1.998p-10)];
            tensor<fp16, [8400, 4]> var_846_cast_fp16 = mul(x = var_842_cast_fp16_0, y = var_845_to_fp16)[name = tensor<string, []>("op_846_cast_fp16")];
            tensor<string, []> var_846_cast_fp16_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_846_cast_fp16_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [8400, 4]> var_846 = cast(dtype = var_846_cast_fp16_to_fp32_dtype_0, x = var_846_cast_fp16)[name = tensor<string, []>("cast_7")];
            tensor<fp32, [8400, 80]> var_842_1 = cast(dtype = var_842_cast_fp16_1_to_fp32_dtype_0, x = var_842_cast_fp16_1)[name = tensor<string, []>("cast_8")];
        } -> (var_842_1, var_846);
}